<!--
Citation for the following code:
Date: 06/06/2024
Authors: Rami Albaroudi and Mohamed Saud, Group 13
Original work with some Jinja expressions adapted from https://github.com/osu-cs340-ecampus/flask-starter-app?tab=readme-ov-file#dynamically-displaying-data-in-a-template
-->

{% extends "template.j2" %}

{% block title %}Tracked Days{% endblock %}

{% block content %}
<h3>Tracked Days Listing</h3>
<h4 style="text-align: center;"><i><b>Instructions:</b> You cannot modify a tracked day's date or client after creation. Please delete and re-create the entry if those fields are incorrect. Total Calories and Calorie Balance are calculated fields and cannot be entered during entry modification.</i></h4>
<!-- Regular table to display Tracked Days records -->
<table>
    <thead>
        <tr>
            <th>Tracked Day ID</th>
            <th>Date</th>
            <th>Client Name</th>
            <th>Total Calories</th>
            <th>Calorie Target</th>
            <th>Calorie Balance</th>
            <th>Note</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        {% for trackedday in trackeddays %}
        <tr id="trackedday-{{ trackedday.trackedDayID }}" data-client-id="{{ trackedday.clientID }}">
            <td>{{ trackedday.trackedDayID }}</td>
            <td>{{ trackedday.trackedDayDate }}</td>
            <td>{{ trackedday.clientName }}</td>
            <td>{{ trackedday.trackedDayTotalCalories }}</td>
            <td>{{ trackedday.trackedDayCalorieTarget }}</td>
            <td>{{ trackedday.trackedDayTotalCalories - trackedday.trackedDayCalorieTarget }}</td>
            <td>{{ trackedday.trackedDayNote }}</td>
            <td>
                <button onclick="editTrackedDay({{ trackedday.trackedDayID }})">Edit</button>
            </td>
            <td>
                <button onclick="confirmDelete({{ trackedday.trackedDayID }})">Delete</button>
            </td>
        </tr>
        {% endfor %}
    </tbody>
</table>

<!-- Form to INSERT entries into the Tracked Days table -->
<form method="POST" action="{{ url_for('trackeddays') }}" onsubmit="return addTrackedDay(event)">
    <h3>Add Tracked Day</h3>
    <h4 style="text-align: center;"><i><b>Instructions:</b>  Total Calories and Calorie Balance are calculated fields and cannot be entered during entry creation.</i></h4>
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Client Name</th>
                <th>Calorie Target</th>
                <th>Note</th>
                <th>Add</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input type="date" id="trackedDayDate" name="trackedDayDate" value="{{ current_date }}" required>
                </td>
                <td>
                    <input type="text" id="searchClient" name="clientName" list="clientNames"
                        placeholder="Search Clients..." required>
                    <datalist id="clientNames">
                        {% for client in clients %}
                        <option value="{{ client.clientName }}">
                            {% endfor %}
                    </datalist>
                </td>
                <td><input type="number" id="trackedDayCalorieTarget" name="trackedDayCalorieTarget" min=1 required>
                </td>
                <td><input type="text" id="trackedDayNote" name="trackedDayNote"></td>
                <td><button type="submit">Add</button></td>
            </tr>
        </tbody>
    </table>
</form>



<script>

    // https://bobbyhadz.com/blog/post-form-data-using-javascript-fetch-api
    // https://bobbyhadz.com/blog/add-onclick-event-to-table-row-in-javascript
    //https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch

    // Function to change the display of the table rows when they are being edited
    function editTrackedDay(trackedDayID) {
        const row = document.getElementById('trackedday-' + trackedDayID);
        const [_, dateCell, clientNameCell, totalCaloriesCell, calorieTargetCell, calorieBalanceCell, noteCell, actionCell] = row.cells;

        // Store the original values in case the edit is cancelled
        row.dataset.originalCalorieTarget = calorieTargetCell.innerText;
        row.dataset.originalNote = noteCell.innerText;

        calorieTargetCell.innerHTML = `<input type="number" value="${calorieTargetCell.innerText}" required min=1>`;
        noteCell.innerHTML = `<input type="text" value="${noteCell.innerText}">`;
        actionCell.innerHTML = `
    <button onclick="updateTrackedDay(${trackedDayID})">Update</button>
    <button onclick="cancelEdit(${trackedDayID})">Cancel</button>
    `;
    }

    // Restore the row values if the edit is cancelled
    function cancelEdit(trackedDayID) {
        const row = document.getElementById('trackedday-' + trackedDayID);
        const [_, dateCell, clientNameCell, totalCaloriesCell, calorieTargetCell, calorieBalanceCell, noteCell, actionCell] = row.cells;

        // Restore the original values
        calorieTargetCell.innerText = row.dataset.originalCalorieTarget;
        noteCell.innerText = row.dataset.originalNote;

        actionCell.innerHTML = `<button onclick="editTrackedDay(${trackedDayID})">Edit</button>`;
    }

    // Function to UPDATE entries in the Tracked Days table
    function updateTrackedDay(trackedDayID) {
        const row = document.getElementById('trackedday-' + trackedDayID);
        const [_, dateCell, clientNameCell, totalCaloriesCell, calorieTargetCell, calorieBalanceCell, noteCell, actionCell] = row.cells;

        const clientID = row.dataset.clientId;
        const trackedDayDate = dateCell.innerText;
        const calorieTarget = calorieTargetCell.firstElementChild.value;
        const note = noteCell.firstElementChild.value;

        fetch(`/updatetrackedday/${trackedDayID}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `clientID=${encodeURIComponent(clientID)}&trackedDayDate=${encodeURIComponent(trackedDayDate)}&trackedDayCalorieTarget=${encodeURIComponent(calorieTarget)}&trackedDayNote=${encodeURIComponent(note)}`
        })
            .then(response => {
                if (response.ok) {
                    calorieTargetCell.innerText = calorieTarget;
                    noteCell.innerText = note;
                    actionCell.innerHTML = `<button onclick="editTrackedDay(${trackedDayID})">Edit</button>`;
                } else {
                    response.text().then(error => alert('Failed to update record. ' + error));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to update record.');
            });
    }




    // Function to INSERT entries in the Tracked Days table
    function addTrackedDay(event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);

        fetch(form.action, {
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (response.ok) {
                    window.location.href = response.url;
                } else {
                    response.text().then(error => alert('Failed to add tracked day. ' + error));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to add tracked day.');
            });

        return false;
    }

    // Function to DELETE entries in the Tracked Days table
    // https://tutorial.eyehunts.com/js/javascript-confirm-delete-before-delete-code/
    function confirmDelete(trackedDayID) {
        if (confirm('Are you sure you want to delete this record?')) {
            fetch(`/deletetrackedday/${trackedDayID}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        document.getElementById('trackedday-' + trackedDayID).remove();
                    } else {
                        alert('Failed to delete record.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to delete record.');
                });
        }
    }
</script>

{% endblock %}